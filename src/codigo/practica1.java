/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author tripl
 */
public class practica1 extends javax.swing.JFrame {

 JFileChooser seleccionar = new JFileChooser(); // el file JFileChooser es el seleccionador de archivos

    public practica1() {
        initComponents();  
         panel.setEditable(false);
  
      
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Abrir = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        panel = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Abrir.setText("Abrir");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        jButton3.setText("Nuevo");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        panel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Abrir)
                        .addGap(14, 14, 14)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Guardar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Abrir)
                    .addComponent(jButton3)
                    .addComponent(Guardar))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
   panel.setEditable(true);
  int abrir = seleccionar.showOpenDialog(null); // nos abre JDialog con el seleccionador de archivos
        StringBuilder sb = new StringBuilder(); 
        if (abrir == JFileChooser.APPROVE_OPTION) { 
                                                                             
            try {
                BufferedReader archivo = new BufferedReader(new FileReader(seleccionar.getSelectedFile())); // le decimos la ubicacion donde se encuentra el archivo que se a elegido
                String valor; 
                while ((valor = archivo.readLine()) != null) {
                    sb.append(valor + "\n");                     // hemos utilizado la clase BufferedReader r nos permite leer una                                     
                   panel.setText(valor + "\n\b");           //línea completa, en lugar de carácter a carácter como hacia FileReader 
                    valor = archivo.readLine();                   // aqui lo que esta haciendo es leer linia por linia y imprimiedola por el jTextArea
                }
                archivo.close();
            } catch (IOException ex) {
                System.out.println("Error al acceder fichero");          // el error en concreto de que no pudo acceder al archivo
            }
        } else if (abrir == JFileChooser.CANCEL_OPTION) {
            System.out.println("");                                      // y la gestión de otro tipo de errores
        }

    }//GEN-LAST:event_AbrirActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
               int guardar = seleccionar.showSaveDialog(null);
        File fichero = new File(seleccionar.getSelectedFile().getPath());
        String nombre = fichero.getName(); 
        String texto = panel.getText();                                                   // te guarda lo que este escrito en el jTextArea
        if (guardar == JFileChooser.APPROVE_OPTION ) {        
// los archivos que tenga una extensión de texto .txt (un texto plano) 
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(fichero))) {
                bw.write(texto);                                                              //utlilizamos la clase BufferedWriter que lo que hace es escribir los nuevos datos
                bw.newLine();                                                                // de forma mas optimizada ya que te los guarda linea por linea y caracter por caracter
                bw.close();                                                                    
            } catch (IOException ex) {
                System.out.println("error al acceder al fichero");                          // el error en concreto de que no pudo acceder al archivo
            }
        } else if (guardar == JFileChooser.CANCEL_OPTION) {
            System.out.println("");                                                         // y la gestión de otro tipo de errores
        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void panelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_panelActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        panel.setText("");
        panel.setEditable(true);
    }//GEN-LAST:event_jButton3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(practica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(practica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(practica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(practica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new practica1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abrir;
    private javax.swing.JButton Guardar;
    private javax.swing.JButton jButton3;
    private javax.swing.JTextField panel;
    // End of variables declaration//GEN-END:variables
}
